---
  - name: disable selinux config
    become: yes
    copy: src=selinux.conf dest=/etc/selinux/config

  - name: disable selinux 
    become: yes
    command: setenforce 0 

  - name: update sysctl.conf
    become: yes
    copy: src=sysctl.conf dest=/etc/sysctl.conf

  - name: modprobe br_netfilter
    become: yes
    shell : |
       /sbin/modprobe br_netfilter
       sysctl -p 

  - name: swapoff 
    become: yes
    command: swapoff -a 

  - name: update fstab 
    become: yes
    shell: | 
      sed -i '/ swap / s/^\(.*\)$/#\1/g' /etc/fstab 

  - name: install yum utils
    become: yes
    yum: name=yum-utils state=present


  - name: install docker ce 
    become: yes
    shell: yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo 
    when: false

  - name: install kubernetes repo
    become: yes
    copy: src=kubernetes.repo dest=/etc/yum.repos.d

  - name: update yum 
    become: yes
    yum: name=* update_cache=yes 

  - name: install kubernetes packages 
    become: yes
    yum: name={{item}} state=present
    with_items:
      - yum-utils 
      - device-mapper-persistent-data
      - lvm2
      - docker
      - kubelet-1.10.7
      - kubeadm-1.10.7
      - kubectl-1.10.7
      - tcpdump
 
  - name: change cgroup-driver 
    become: yes 
    shell: |
      sed -i 's/cgroup-driver=systemd/cgroup-driver=cgroupfs/g' /etc/systemd/system/kubelet.service.d/10-kubeadm.conf
    when: false

  - name: change cluster-dns-ip 
    become: yes
    shell: |
       sed -i 's/--cluster-dns=10.96.0.10/--cluster-dns={{CLUSTER_DNS}}/g' /etc/systemd/system/kubelet.service.d/10-kubeadm.conf

  - name: restart docker & kubelet
    service: name={{item}} state=restarted enabled=yes daemon_reload=yes
    with_items:
      - docker 
      - kubelet 

  - name: update iptable rules 
    become: yes
    shell: |
       iptables -I INPUT -p udp -m udp --dport 8472 -j ACCEPT 
       iptables -I INPUT -p udp -m udp --dport 53 -j ACCEPT
       iptables-save > /etc/sysconfig/iptables


  - name: kubeadm init 
    become: yes
    shell: |
       kubeadm init --apiserver-advertise-address={{ node_ip}} --pod-network-cidr=192.168.12.1/24 --service-cidr=192.168.16.1/24
#    when: inventory_hostname == "k8s2master"
    when: false
    register: kubeadm_output

  - name: "Add K8S Token and Hash to dummy host"
    add_host:
       name: "k8s_kubeadm_holder"
       token: "{{ kubeadm_output.stdout_lines[-1] }} --ignore-preflight-errors=all"
    when: false

  - name: kubeadm node  
    become: yes
    shell: |
         {{ hostvars['k8s_kubeadm_holder']['token'] }}
#    when: false && inventory_hostname != "k8s2master"
    when: false
